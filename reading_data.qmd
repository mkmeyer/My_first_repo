---
title: "Reading Data"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

```{r, include = FALSE}
rm(list=ls())
library(readr)
library(dplyr)
```

## Reading a `csv` file

```{r}
air_quality_data <- read_csv("https://www4.stat.ncsu.edu/online/datasets/AirQuality.csv")

air_quality_data

air_quality_data$`CO(GT)`[1:10]
```

Manipulate this data to clean it up a bit.

```{r}
air_quality_data |>
  select(-starts_with("...")) |>
  rename("co_gt" = `CO(GT)`,
         "pt_08_sq_co" = `PT08.S1(CO)`,
         "nmhc_gt" = `NMHC(GT)`,
         "c6h6_gt" = `C6H6(GT)`,
         "pt_08_s2_nmhc" = `PT08.S2(NMHC)`,
         "nox_gt" = `NOx(GT)`,
         "pt_08_s3_nox" = `PT08.S3(NOx)`,
         "no2_gt" = `NO2(GT)`,
         "pt_08_s4_no2" = `PT08.S4(NO2)`,
         "pt_08_s5_o3" = `PT08.S5(O3)`) |>
  filter(co_gt != -200) |>
  mutate(mean_co_gt = mean(co_gt, na.rm = TRUE)) |>
  View()
```

Now do the same creation of a variable, but do it for many of the numeric variables

```{r}
air_quality_data |>
  select(-starts_with("...")) |>
  rename("co_gt" = `CO(GT)`,
         "pt_08_sq_co" = `PT08.S1(CO)`,
         "nmhc_gt" = `NMHC(GT)`,
         "c6h6_gt" = `C6H6(GT)`,
         "pt_08_s2_nmhc" = `PT08.S2(NMHC)`,
         "nox_gt" = `NOx(GT)`,
         "pt_08_s3_nox" = `PT08.S3(NOx)`,
         "no2_gt" = `NO2(GT)`,      
         "pt_08_s4_no2" = `PT08.S4(NO2)`,
         "pt_08_s5_o3" = `PT08.S5(O3)`) |>
  filter(co_gt != -200) |>
  mutate(across(where(is.numeric), mean, .names = "mean_{.col}")) |>
  View()
```

```{r}
air_quality_data |>
  select(-starts_with("...")) |>
  rename("co_gt" = `CO(GT)`,
         "pt_08_sq_co" = `PT08.S1(CO)`,
         "nmhc_gt" = `NMHC(GT)`,
         "c6h6_gt" = `C6H6(GT)`,
         "pt_08_s2_nmhc" = `PT08.S2(NMHC)`,
         "nox_gt" = `NOx(GT)`,
         "pt_08_s3_nox" = `PT08.S3(NOx)`,
         "no2_gt" = `NO2(GT)`,      
         "pt_08_s4_no2" = `PT08.S4(NO2)`,
         "pt_08_s5_o3" = `PT08.S5(O3)`) |>
  filter(co_gt != -200) |>
  mutate(across(where(is.numeric), list(mean = mean, sd = sd), .names = "{.col}_{.fn}")) |>
  View()
```

Add in grouping functionality

```{r}
air_quality_data |>
  select(-starts_with("...")) |>
  rename("co_gt" = `CO(GT)`,
         "pt_08_sq_co" = `PT08.S1(CO)`,
         "nmhc_gt" = `NMHC(GT)`,
         "c6h6_gt" = `C6H6(GT)`,
         "pt_08_s2_nmhc" = `PT08.S2(NMHC)`,
         "nox_gt" = `NOx(GT)`,
         "pt_08_s3_nox" = `PT08.S3(NOx)`,
         "no2_gt" = `NO2(GT)`,      
         "pt_08_s4_no2" = `PT08.S4(NO2)`,
         "pt_08_s5_o3" = `PT08.S5(O3)`) |>
  filter(co_gt != -200) |>
  group_by(Date) |>
  mutate(across(where(is.numeric), mean, .names = "mean_{.col}")) |>
  View()
```

## Reading in Fixed Width Fied (FWF) file

```{r}
read_fwf("https://www4.stat.ncsu.edu/online/datasets/cigarettes.txt",
         fwf_widths(c(17, 5, 9, 7, 4), c("brand", "tar", "nicotine", "weight", "co")),
         skip = 1)
```

## Reading from a Database

```{r}
#need the bigrquery

library(DBI)
library(tidyverse)

# con <- dbConnect(
#   bigrquery::bigquery(),
#   project = "bigquery-public-data",
#   dataset = "google_trends"
#   billing = ""
# )
# 
# dbListTables(con)
# 
# my_data <- tbl(con, "top_terms") |>
#   select(refresh_date, term, rank, dma_id, dma_name) |>
#   rename("Day" = "refresh_date",
#          "Top_Term" = "term") |>
#   filter(rank == 1,
#          Day > lubridate::as_date("2024-05-14"),
#          dma_id == 500) |>
#   collect()
```
